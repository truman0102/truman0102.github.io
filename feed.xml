<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://truman0102.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://truman0102.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-04T15:05:18+00:00</updated><id>https://truman0102.github.io/feed.xml</id><title type="html">Hongguang</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">a post with tabs</title><link href="https://truman0102.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://truman0102.github.io/blog/2024/tabs</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="6753a423-f1bf-4a06-9a2d-2f83df4d6e3a" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="6753a423-f1bf-4a06-9a2d-2f83df4d6e3a" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="1fbe5c5d-c077-4df7-b551-fcd9bcde8a13" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="1fbe5c5d-c077-4df7-b551-fcd9bcde8a13" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="644f96f1-ba9a-4b06-9748-0bedd4a0e19d" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="644f96f1-ba9a-4b06-9748-0bedd4a0e19d" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://truman0102.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://truman0102.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://truman0102.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://truman0102.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://truman0102.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://truman0102.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://truman0102.github.io/blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://truman0102.github.io/blog/2024/echarts</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry><entry><title type="html">a post with chart.js</title><link href="https://truman0102.github.io/blog/2024/chartjs/" rel="alternate" type="text/html" title="a post with chart.js"/><published>2024-01-26T01:04:00+00:00</published><updated>2024-01-26T01:04:00+00:00</updated><id>https://truman0102.github.io/blog/2024/chartjs</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/chartjs/"><![CDATA[<p>This is an example post with some <a href="https://www.chartjs.org/">chart.js</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-chartjs">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Which generates:</p> <pre><code class="language-chartjs">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included chart.js code could look like]]></summary></entry><entry><title type="html">Swarm Intelligence</title><link href="https://truman0102.github.io/blog/2024/swarm-intelligence/" rel="alternate" type="text/html" title="Swarm Intelligence"/><published>2024-01-17T04:00:00+00:00</published><updated>2024-01-17T04:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/swarm-intelligence</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/swarm-intelligence/"><![CDATA[<h2 id="群体智能">群体智能</h2> <h3 id="蚁群算法">蚁群算法</h3> <p>蚁群算法适用于空间搜索，在图搜索中寻找最短路径，如旅行商问题。蚁群算法的基本思想是</p> <ul> <li>每个蚂蚁表示一个agent，蚂蚁在空间中随机移动求解问题</li> <li>蚂蚁经过一条路径后，会在路径上留下信息素，信息素浓度与路径的优劣有关</li> <li>蚂蚁的移动是一个概率过程，与移动路径上的信息素浓度有关，信息素浓度越高，蚂蚁越有可能选择该路径</li> <li>每当所有蚂蚁完成一轮搜索后，根据他们的路径更新信息素浓度</li> <li>重复上述过程，直到解不再变化或达到最大迭代次数</li> </ul> <p>位于城市\(i\)的第\(k\)只蚂蚁移动到直接可达的城市\(j\)的概率为</p> \[p_{ij}^k = \frac{(\tau_{ij})^\alpha (\eta_{ij})^\beta}{\sum_{l \in allowed} (\tau_{il})^\alpha (\eta_{il})^\beta}\] <p>其中\(\tau_{ij}\)为城市\(i\)到城市\(j\)的信息素浓度，浓度越大概率越大；\(\eta_{ij}=\frac{1}{d_{ij}}\)为城市\(i\)到城市\(j\)的启发式信息，距离越远概率越小；\(\alpha\)和\(\beta\)为参数，控制信息素浓度和启发式信息的重要程度；\(allowed\)为蚂蚁\(k\)从城市\(i\)出发可以直接到达且未访问过的城市集合。</p> <p>更新城市\(i\)到城市\(j\)的信息素浓度的公式为</p> \[\begin{aligned} \tau_{ij} &amp;= \rho\tau_{ij} + \Delta \tau_{ij} &amp;\rho\text{反映信息素的挥发速度} \\ \Delta \tau_{ij} &amp;= \sum_{k=1}^m \Delta \tau_{ij}^k &amp;m \text{为蚂蚁数量} \\ \Delta \tau_{ij}^k &amp;= \begin{cases} Q/L_k &amp; \text{蚂蚁}k\text{经过路径}(i,j) \\ 0 &amp; \text{蚂蚁}k\text{未经过路径}(i,j) \end{cases}&amp;Q\text{为常数，}L_k\text{为蚂蚁}k\text{经过的路径长度} \end{aligned}\] <p>一般蚂蚁个数不超过节点/城市的个数</p> <h3 id="粒子群算法">粒子群算法</h3> <p>粒子群算法适用于连续空间搜索，如函数优化问题。通常有一个适应度函数\((x)\)，用于评判当前位置解的好坏，每个粒子都有一个速度\(v\)和位置\(x\)，其中\(x\)是问题可能的解，\(v\)是粒子在解空间中的移动速度，也可以理解为移动方向和步长。粒子群算法的基本思想是多个粒子在解空间中随机移动求解问题，记录每个粒子的历史最优解（根据适应度函数）以及全局最优解，每个粒子的移动速度由历史最优解和全局最优解决定，每次迭代更新粒子的位置和速度，直到解不再变化或达到最大迭代次数。</p> \[\begin{aligned} v_i^{t+1} &amp;= v_i^t + c_1r_1(p_i^t - x_i^t) + c_2r_2(g^t - x_i^t) \\ x_i^{t+1} &amp;= x_i^t + v_i^{t+1}= x_i^t + \underbrace{v_i^t}_{\text{惯性}} + \underbrace{c_1r_1(p_i^t - x_i^t)}_{\text{记忆项}} + \underbrace{c_2r_2(g^t - x_i^t)}_{\text{社会项}} \\ \end{aligned}\] <p>其中\(i\)为粒子编号，\(t\)为迭代次数，\(v_i^t\)为粒子\(i\)在\(t\)时刻的速度，\(x_i^t\)为粒子\(i\)在\(t\)时刻的位置，\(p_i^t\)为粒子\(i\)在\(t\)时刻的历史最优位置，\(g^t\)为全局最优位置，\(c_1\)和\(c_2\)为常数，\(r_1\)和\(r_2\)为随机数。</p> <h3 id="遗传算法"><a href="/blog/2023/search/#genetic-algorithms-遗传算法">遗传算法</a></h3>]]></content><author><name></name></author><category term="artificial-intelligence"/><category term="AI"/><summary type="html"><![CDATA[群体智能]]></summary></entry><entry><title type="html">Regularization</title><link href="https://truman0102.github.io/blog/2024/regularization/" rel="alternate" type="text/html" title="Regularization"/><published>2024-01-10T04:00:00+00:00</published><updated>2024-01-10T04:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/regularization</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/regularization/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Regularization is a technique used to prevent overfitting in machine learning models. It does this by adding a penalty term to the loss function. The penalty term is a function of the weights of the model. The penalty term is small when the weights are small and large when the weights are large. This encourages the model to learn smaller weights, which in turn reduces overfitting.</p> \[\mathcal{L}(\theta) = \mathcal{L}_0(\theta) + \underbrace{\lambda\mathcal{R}(\theta)}_{\text{regularization}}\] <p>where \(\mathcal{L}_0(\theta)\) is the loss function without regularization, \(\lambda\) is the regularization strength, and \(\mathcal{R}(\theta)\) is the regularization term.</p> <h2 id="types-of-regularization">Types of Regularization</h2> <h3 id="l2-regularization">L2 Regularization</h3> <p>L2 regularization is the most common type of regularization. It is also known as ridge regression. The regularization term is the sum of the squares of the weights.</p> \[\mathcal{R}(\theta) = \sum_{i=1}^n \theta_i^2\] <h3 id="l1-regularization">L1 Regularization</h3> <p>L1 regularization is also known as Lasso regression. The regularization term is the sum of the absolute values of the weights.</p> \[\mathcal{R}(\theta) = \sum_{i=1}^n |\theta_i|\] <h2 id="regularization-bias-and-variance">Regularization, Bias, and Variance</h2> <p>Bias and variance are two sources of error in machine learning models. Bias is the difference between the expected value of the model’s predictions and the true value. Variance is the variability of the model’s predictions.</p> <p>The bias-variance tradeoff is a fundamental concept in machine learning. It states that there is a tradeoff between bias and variance. A model with high bias will have low variance and vice versa. The goal is to find a model that has low bias and low variance. Regularization reduces variance at the expense of increasing bias. This is because regularization reduces the complexity of the model, which reduces the model’s ability to fit the training data.</p>]]></content><author><name></name></author><category term="data-science"/><category term="regularization"/><category term="ML"/><summary type="html"><![CDATA[An introduction to regularization in machine learning.]]></summary></entry><entry><title type="html">Causal Effect</title><link href="https://truman0102.github.io/blog/2024/causal-effect/" rel="alternate" type="text/html" title="Causal Effect"/><published>2024-01-05T01:00:00+00:00</published><updated>2024-01-05T01:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/causal-effect</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/causal-effect/"><![CDATA[<h1 id="因果模型">因果模型</h1> <p>因果模型是一种用于描述因果关系的模型，它可以用于预测和干预。因果模型的基本假设是，我们可以通过观察到的变量来推断未观察到的变量。</p> <p>因果模型图是因果模型的一种可视化表示，它是一个有向无环图，其中节点表示变量，边表示因果关系，从一个变量指向另一个变量的边表示前者是后者的原因。</p> <p>对因果模型图进行分析时：</p> <ol> <li>对于一个节点而言，它的所有父节点都是它的直接原因，它的所有子节点都是它的直接结果；它的所有祖先节点都是它的间接原因，它的所有后代节点都是它的间接结果。</li> <li>对于两个节点而言，如果它们通过一条边直接相连，那么它们互为因果；如果它们之间存在至少一条路径，那么通过引入更多的中间节点，它们可能互为因果。</li> <li>对于三个节点而言，其中一个节点位于连接另外两个节点的路径上，那么通过控制该中间节点，可以控制另外两个节点之间的关系。</li> </ol> <h2 id="乘积分解法则">乘积分解法则</h2> <p>对于<a href="#链结构">链结构</a>而言，我们可以将联合概率分解为条件概率的乘积，即乘积分解法则。</p> \[P(x_1, x_2, \cdots, x_n) = \prod_{i=1}^n P(x_i \vert pa(x_i))\] <p>其中\(pa(x_i)\)表示\(x_i\)的父节点。</p> <p>考虑一个简单的例子，假设有三个变量\(X\)、\(Y\)和\(Z\)，它们之间的关系为\(X \rightarrow Y \rightarrow Z\)，那么有</p> \[P(X, Y, Z) = P(X)P(Y \vert X)P(Z \vert Y)\] <h2 id="结构因果模型">结构因果模型</h2> <p>结构因果模型用于描述数据的产生机制，包括：</p> <ol> <li>外生变量集合\(U\)，它们是模型中的根节点，它们的值是由外部环境决定的，不依赖于模型中的其他变量。</li> <li>内生变量集合\(V\)，它们是模型中的非根节点，它们的值是由模型中的其他变量决定的，即至少依赖于一个父节点。</li> <li>确定内生变量取值的函数集合\(F\)，它们是模型中的边，它们的值是由父节点的值决定的，即它们是父节点的函数。</li> </ol> \[V = F\{U\}\] <h2 id="因果模型图和独立性">因果模型图和独立性</h2> <p>以三个邻接的节点\(X\)、\(Y\)和\(Z\)为例，将三个节点直接相连，考虑边的方向，有三种情况：</p> <ol> <li>链结构：\(X \rightarrow Y \rightarrow Z\)。</li> <li>分叉结构：\(X \leftarrow Y \rightarrow Z\)。</li> <li>对撞结构：\(X \rightarrow Y \leftarrow Z\)；也叫共因结构。</li> </ol> <p>在独立性分析中，我们关注的是通过控制中间节点，是否可以推断出两个节点的独立性或依赖关系。通过下文的分析，我们可以得到如下结论：链结构和分叉结构中的独立性判断是类似的，而对撞结构中的独立性判断与它们不同。</p> <h3 id="链结构">链结构</h3> <p>在链结构中</p> <ul> <li> \[X=F_X\{U_X\}\] </li> <li> \[Y=F_Y\{X, U_Y\}\] </li> <li> \[Z=F_Z\{Y, U_Z\}\] </li> </ul> <p>给定\(Y\)，\(X\)和\(Z\)只受外生变量影响，故\(X\)和\(Z\)独立，记作\(X \perp Z \vert Y\)</p> <pre><code class="language-mermaid">graph LR
    id1["U{X}"] --&gt; X
    X --&gt; Y
    id2["U{Y}"] --&gt; Y
    Y --&gt; Z
    id3["U{Z}"] --&gt; Z
</code></pre> <h3 id="分叉结构">分叉结构</h3> <p>在分叉结构中</p> <ul> <li> \[X=F_X\{U_X\}\] </li> <li> \[Y=F_Y\{X, U_Y\}\] </li> <li> \[Z=F_Z\{X, U_Z\}\] </li> </ul> <p>给定\(X\)，\(Y\)和\(Z\)只受外生变量影响，故\(Y\)和\(Z\)独立，记作\(Y \perp Z \vert X\)</p> <pre><code class="language-mermaid">graph LR
    id1["U{X}"] --&gt; X
    id2["U{Y}"] --&gt; Y
    X --&gt; Y
    X --&gt; Z
    id3["U{Z}"] --&gt; Z
</code></pre> <h3 id="对撞结构">对撞结构</h3> <p>在对撞结构中</p> <ul> <li> \[X=F_X\{U_X\}\] </li> <li> \[Y=F_Y\{U_Y\}\] </li> <li> \[Z=F_Z\{X, Y, U_Z\}\] </li> </ul> <p>不给定额外信息，\(X\)和\(Y\)独立；给定\(Z\)，\(X\)和\(Y\)的关系内含于\(Z=F_Z\{X, Y, U_Z\}\)，故\(X\)和\(Y\)不独立，记作\(X \not\perp Y \vert Z\)</p> <pre><code class="language-mermaid">graph LR
    id1["U{X}"] --&gt; X
    X --&gt; Z
    id2["U{Z}"] --&gt; Z
    id3["U{Y}"] --&gt; Y
    Y --&gt; Z
</code></pre> <h3 id="d-分离">d-分离</h3> <p>\(d\)-分离是一种判断两个节点是否独立的方法，它是基于因果模型图的有向路径的概念的。在前文的讨论中，我们通过控制中间结点说明：控制中间节点后的<code class="language-plaintext highlighter-rouge">链结构</code>和<code class="language-plaintext highlighter-rouge">分叉结构</code>中的两个节点<code class="language-plaintext highlighter-rouge">独立</code>，而<code class="language-plaintext highlighter-rouge">对撞结构</code>中的两个节点<code class="language-plaintext highlighter-rouge">不独立</code>。</p> <p>此处我们给出<code class="language-plaintext highlighter-rouge">阻断</code>的概念：一条路径会被一组节点\(Z\)阻断，当且仅当：</p> <ol> <li>该路径中包含链结构或分叉结构，且该结构中的中间节点在\(Z\)中。</li> <li>该路径中包含对撞结构，且该结构中的中间节点不在\(Z\)中。</li> </ol> <p>我们可以将阻断的概念理解为：阻断了因果关系的传递，使得节点互相独立。如果一组节点\(Z\)阻断了节点\(X\)和\(Y\)之间的所有路径，那么\(X\)和\(Y\)在给定\(Z\)的条件下是\(d\)-分离的，记作\(X \perp_d Y \vert Z\)或\(X \perp Y \vert Z\)。</p> <h2 id="干预">干预</h2> <p>干预是将变量固定为某个值，限制改变量的变化，等价于在因果模型中去除所有指向该变量的边。干预后的因果模型图称为干预模型图。</p> <p><code class="language-plaintext highlighter-rouge">干预</code>与<code class="language-plaintext highlighter-rouge">条件</code>的区别在于干预改变了系统本身，而条件只是改变了系统的观测。一般用条件概率表示因果效应</p> \[\begin{aligned} \text{干预 }&amp; P(Y=y \vert do(X=x)) \\ \text{条件 }&amp; P(Y=y \vert X=x) \end{aligned}\] <p>在只有观测数据时，我们只能从数据中估计干预操作的效果，称之为<code class="language-plaintext highlighter-rouge">校正</code>。校正公式描述了从观测数据中估计干预后的目标变量\(Y\)的概率分布</p> \[\begin{aligned} P(Y=y \vert do(X=x)) &amp;= P(Y=y \vert X=x) \\ \text{全概公式 }&amp;= \sum P(Y=y\vert X=x,Pa(X)=z)P(Pa(X)=z\vert X=x)\\ \text{独立性 }&amp;= \sum P(Y=y\vert X=x,Pa(X)=z)P(Pa(X)=z) \end{aligned}\] <p>这里的\(Pa(X)\)表示\(X\)的父节点集合。</p> <h3 id="后门准则">后门准则</h3> <p>后门准则应用于干预中\(X\)的父节点集合\(Pa(X)\)不可观测的情况，即试图找出一个可观测的变量集合\(Z\)，使得\(Z\)阻断了\(X\)和\(Y\)之间的所有伪因果路径。</p> <p>给定因果模型图中的一对有序变量\((X, Y)\)和一组变量\(Z\)，如果满足以下条件：</p> <ol> <li>\(Z\)<a href="#d-分离">阻断</a>了\(X\)和\(Y\)之间的每条含有指向\(X\)的路径。（阻断\(X\)和\(Y\)之间的所有伪因果/后门路径）</li> <li>\(Z\)中没有\(X\)的后代节点。（保持\(X\)到\(Y\)的因果路径不变）</li> </ol> <p>则称\(Z\)满足关于\((X, Y)\)的后门准则。此时\(Z\)可以替代\(X\)的父节点集合\(Pa(X)\)，用于校正\(X\)的干预效果，即后门校正</p> \[P(Y=y \vert do(X=x)) = \sum_z P(Y=y\vert X=x, Z=z)P(Z=z)\] <h3 id="前门准则">前门准则</h3> <p>前门准则通过\(X\)到\(Y\)的中介变量估计因果效应。考虑因果模型图中的一对有序变量\((X, Y)\)和一组变量\(Z\)，如果满足以下条件：</p> <ol> <li>\(Z\)切断了所有从\(X\)到\(Y\)的路径。（阻断\(X\)和\(Y\)之间的所有因果路径）</li> <li>\(X\)到\(Z\)没有后门路径。（保持\(X\)到\(Z\)的因果路径不变）</li> <li>所有\(Z\)到\(Y\)的后门路径都被\(X\)阻断。（保持\(Z\)到\(Y\)的因果路径不变）</li> </ol> <p>则称\(Z\)满足关于\((X, Y)\)的前门准则。此时\(Z\)可以替代\(X\)的父节点集合\(Pa(X)\)和后门校正来校正\(X\)的干预效果，即前门校正</p> \[\begin{aligned} P(Y=y \vert do(X=x)) &amp;= \sum_z P(Z=z\vert X=x)\sum_{x^{\prime}}P(Y=y\vert X=x^{\prime}, Z=z)P(X=x^{\prime}\vert Z=z) \\ &amp;= \sum_z \underbrace{P(Z=z\vert X=x)}_{X\rightarrow Z} \underbrace{\sum_{x^{\prime}}P(Y=y\vert X=x^{\prime}, Z=z)P(X=x^{\prime})}_{X\text{后门校正}Z\rightarrow Y} \end{aligned}\] <h2 id="反事实">反事实</h2> <p>在完全一致的现实条件下，比较不同假设的结果，即反事实。反事实的表示为\(Y_x\)，表示在\(X=x\)的条件下，\(Y\)的取值。</p> <p>给定结构因果模型，反事实计算分为三步</p> <ol> <li>用观测确定当前环境，即外生变量\(U\)的取值。</li> <li>用\(X=x\)替换\(X\)的定义，得到新的因果模型。(移除变量\(X\)出现在方程左边的情况，并用\(X=x\)替换）</li> <li>用新的因果模型计算\(Y\)的取值。</li> </ol> <p><a href="#后门准则">后门</a>的反事实计算</p> \[P(Y_x=y) = \sum_z P(Y=y\vert X=x, Z=z)P(Z=z)\]]]></content><author><name></name></author><category term="artificial-intelligence"/><category term="AI"/><category term="causal-effect"/><summary type="html"><![CDATA[An introduction to causal effect in artificial intelligence.]]></summary></entry><entry><title type="html">Advanced AI Notes</title><link href="https://truman0102.github.io/blog/2024/advanced-ai-note/" rel="alternate" type="text/html" title="Advanced AI Notes"/><published>2024-01-02T04:00:00+00:00</published><updated>2024-01-02T04:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/advanced-ai-note</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/advanced-ai-note/"><![CDATA[<hr/> <table> <thead> <tr> <th style="text-align: left">Category</th> <th style="text-align: left">Topic</th> <th style="text-align: center">Content</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">Symbolic AI</td> <td style="text-align: left">Logic agents</td> <td style="text-align: center"><a href="/blog/2023/logic-agents/">blog</a></td> </tr> <tr> <td style="text-align: left">Symbolic AI</td> <td style="text-align: left">First-order logic</td> <td style="text-align: center"><a href="/blog/2023/first-order-logic/">blog</a></td> </tr> <tr> <td style="text-align: left">Problem-solving</td> <td style="text-align: left">Search</td> <td style="text-align: center"><a href="/blog/2023/search/">blog</a></td> </tr> <tr> <td style="text-align: left">Problem-solving</td> <td style="text-align: left">Adversarial search</td> <td style="text-align: center"><a href="/blog/2023/adversarial-search/">blog</a></td> </tr> <tr> <td style="text-align: left">Swarm intelligence</td> <td style="text-align: left">ACO, PSO and GA</td> <td style="text-align: center"><a href="/blog/2024/swarm-intelligence/">blog</a></td> </tr> <tr> <td style="text-align: left">Statistical causal inference</td> <td style="text-align: left">Causal effect</td> <td style="text-align: center"><a href="/blog/2024/causal-effect/">blog</a></td> </tr> </tbody> </table> <hr/>]]></content><author><name></name></author><category term="notes"/><category term="artificial-intelligence"/><category term="AI"/><summary type="html"><![CDATA[notes on advanced AI course]]></summary></entry></feed>