<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://truman0102.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://truman0102.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-05T02:54:18+00:00</updated><id>https://truman0102.github.io/feed.xml</id><title type="html">Hongguang</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Learning Global Routing via Hub Generation and Pin-hub Connection</title><link href="https://truman0102.github.io/blog/2024/hubrouter/" rel="alternate" type="text/html" title="Learning Global Routing via Hub Generation and Pin-hub Connection"/><published>2024-12-04T19:00:00+00:00</published><updated>2024-12-04T19:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/hubrouter</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/hubrouter/"><![CDATA[]]></content><author><name></name></author><category term="paper-reading"/><category term="chip"/><category term="RL"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">The Policy-gradient Placement and Generative Routing Neural Networks for Chip Design</title><link href="https://truman0102.github.io/blog/2024/generative-routing-chip/" rel="alternate" type="text/html" title="The Policy-gradient Placement and Generative Routing Neural Networks for Chip Design"/><published>2024-12-04T17:00:00+00:00</published><updated>2024-12-04T17:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/generative-routing-chip</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/generative-routing-chip/"><![CDATA[]]></content><author><name></name></author><category term="paper-reading"/><category term="chip"/><category term="RL"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">On Joint Learning for Solving Placement and Routing in Chip Design</title><link href="https://truman0102.github.io/blog/2024/joint-learning-chip/" rel="alternate" type="text/html" title="On Joint Learning for Solving Placement and Routing in Chip Design"/><published>2024-12-04T15:00:00+00:00</published><updated>2024-12-04T15:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/joint-learning-chip</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/joint-learning-chip/"><![CDATA[]]></content><author><name></name></author><category term="paper-reading"/><category term="chip"/><category term="RL"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Macro Placement for Chip Design</title><link href="https://truman0102.github.io/blog/2024/macro-placement/" rel="alternate" type="text/html" title="Macro Placement for Chip Design"/><published>2024-12-03T14:30:00+00:00</published><updated>2024-12-03T14:30:00+00:00</updated><id>https://truman0102.github.io/blog/2024/macro-placement</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/macro-placement/"><![CDATA[<h2 id="guidelines-to-place-macros">Guidelines to place macros</h2> <ol> <li>将macro放置在芯片外围，这样更容易为它们供电，如果将它们放置在芯片中央，可能会导致大量绕行布线</li> <li>根据飞线放置</li> </ol> <h2 id="why-we-place-macro-before-standard-cell-in-physical-design">Why we place macro before standard cell in physical design?</h2> <p>在集成电路的物理设计流程中，将宏单元在标准单元之前放置是一个经过深思熟虑的策略，背后有着多个具体原因和考虑：</p> <ol> <li> <p><strong>占用面积大</strong>：宏单元通常包括大规模的存储器模块或专用的IP模块，这些模块在芯片上需要占据很大的面积。由于其体积庞大，一旦确定位置后，很难再进行调整。因此，在设计初期就需要为它们预留足够的空间，以避免后期设计调整带来的复杂性。</p> </li> <li> <p><strong>固定布局的约束</strong>：由于宏单元的尺寸较大，而且可能有严格的性能、热管理和电力传输要求，它们通常会受到许多布局约束。这些约束要求在设计的早期阶段予以解决，这样可以降低对后续步骤的影响。</p> </li> <li> <p><strong>供电和散热考虑</strong>：宏单元由于设计的复杂性，通常会有更高的功耗和更复杂的供电需求。先放置这些单元并进行供电布线有利于优化电源分配，同时也可以进行早期的热分析，以确保芯片的可靠性和性能。</p> </li> <li> <p><strong>信号完整性和时序优化</strong>：宏单元可能会引入较长的信号路径，它们的相对位置将会直接影响到信号的延迟和完整性。在早期进行放置，能够更好地规划总线和关键信号路径，避免后期的重布局或时序问题。</p> </li> <li> <p><strong>设计的灵活性</strong>：通过首先确定宏单元的位置，可以在更紧凑和高效的空间中安排标准单元。这种方法允许对标准单元的布局进行更灵活的优化，同时避免对宏单元的重新排列造成的复杂调整。</p> </li> <li> <p><strong>提高设计效率</strong>：宏单元的早期放置和固定，使后续的设计流程更加流畅。当宏单元位置确定后，物理设计中的后续步骤（例如标准单元的放置、详细布线及优化等）可以在一个较为稳定的框架下进行，减少了因宏单元位置变化带来的不确定性。</p> </li> </ol> <p>通过在物理设计流程的初期阶段优先考虑宏单元的位置和布局，不仅可以确保设计满足技术和性能的要求，还能大幅提高整个设计流程的效率和效果。</p>]]></content><author><name></name></author><category term="chip-design"/><category term="chip"/><category term="EDA"/><summary type="html"><![CDATA[brief introduction to macro placement in chip design]]></summary></entry><entry><title type="html">Diffusion Model</title><link href="https://truman0102.github.io/blog/2024/diffusion-model/" rel="alternate" type="text/html" title="Diffusion Model"/><published>2024-09-14T04:00:00+00:00</published><updated>2024-09-14T04:00:00+00:00</updated><id>https://truman0102.github.io/blog/2024/diffusion-model</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/diffusion-model/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Diffusion model is defined as a Markov chain of diffusion steps to slowly add random noise to data and learn to reverse the process to construct data from the noise.</p> <h2 id="definition">Definition</h2> <h3 id="forward-process">Forward Process</h3> <p>Given a data \(x_0\sim q(x)\), a sequence of noisy samples \(x_1, x_2, \ldots, x_T\) is generated by adding gaussian noise to the data step by step. The step sizes are controlled by a variance schedule \(\{\beta_t\in (0,1)\}_{t=1}^T\).</p> \[\begin{aligned} q(x_t\vert x_{t-1}) &amp;= \mathcal{N}(x_t\vert \sqrt{1-\beta_t}x_{t-1}, \beta_t I) \\ q(x_{1\colon T}\vert x_0) &amp;= \prod_{t=1}^T q(x_t\vert x_{t-1}) \end{aligned}\] <p>As \(T\to\infty\), the distribution of \(x_T\) approaches an isotropic gaussian distribution. Let \(\alpha_t = 1-\beta_t\) and \(\bar{\alpha}_t = \prod_{s=1}^t\alpha_s\), the above process can be written as a closed-form solution using repameterization trick:</p> \[\begin{aligned} q(x_t\vert x_{t-1}) &amp;= \mathcal{N}(x_t\vert \sqrt{\alpha_t}x_{t-1}, (1-\alpha_t)I)&amp; \\ &amp;= \sqrt{\alpha_t}x_{t-1} + \sqrt{1-\alpha_t}\epsilon_{t-1}&amp; \epsilon_{t-1}\sim\mathcal{N}(0, I) \\ &amp;= \sqrt{\alpha_t\alpha_{t-1}}x_{t-2} + \sqrt{\alpha_t(1-\alpha_{t-1})}\epsilon_{t-2} + \sqrt{1-\alpha_t}\epsilon_{t-1}&amp; \\ &amp;= \sqrt{\alpha_t\alpha_{t-1}}x_{t-2} + \sqrt{1-\alpha_t\alpha_{t-1}}\bar{\epsilon}_{t-2}&amp; \bar{\epsilon}_{t-2}\text{ is a mixture of }\epsilon_{t-1}\text{ and }\epsilon_{t-2} \\ &amp;= \dots &amp; \\ &amp;= \sqrt{\bar{\alpha}_t}x_0 + \sqrt{1-\bar{\alpha}_t}\epsilon&amp; \\ q(x_t\vert x_0) &amp;= \mathcal{N}(x_t\vert \sqrt{\bar{\alpha}_t}x_0, (1-\bar{\alpha}_t)I) \end{aligned}\] <p>Two gaussians \(\mathcal{N}(0, \sigma_1^2 I)\) and \(\mathcal{N}(0, \sigma_2^2 I)\) can be mixed into a gaussian \(\mathcal{N}(0, (\sigma_1^2+\sigma_2^2)I)\). The variance of the gaussian \(x_t\) refers to the sum of the variances of the noise at each step, which is \(\sum_{s=1}^t\beta_s\).</p> <h3 id="reverse-process">Reverse Process</h3> <p>A model \(p_{\theta}\) is trained to reverse the process by learning the conditional distribution \(p_{\theta}(x_{t-1}\vert x_t)\).</p> \[p_{\theta}(x_{t-1}\vert x_t) = \mathcal{N}(x_{t-1}\vert \mu_\theta(x_t, t), \Sigma_\theta(x_t, t))\] <p>The conditional probability can be written as conditioned on \(x_0\):</p> \[\begin{aligned} q(x_{t-1}\vert x_t, x_0) &amp;= \mathcal{N}(x_{t-1}\vert \tilde{\mu}_(x_t, x_0), \tilde{\beta}_t I) \\ \end{aligned}\] <p>According bayes’ rule, the mean and variance can be parameterized as follows:</p> \[\begin{aligned} \tilde{\beta}_t &amp;= \frac{1-\bar{\alpha}_{t-1}}{1-\bar{\alpha}_t}\beta_t \\ \tilde{\mu}_t(x_t, x_0) &amp;= \frac{\sqrt{\alpha_t}(1-\bar{\alpha}_{t-1})}{1-\bar{\alpha}_t}x_t + \frac{\sqrt{\bar{\alpha}_{t-1}}\beta_t}{1-\bar{\alpha}_t}x_0 \\ x_0 &amp;= \frac{1}{\sqrt{\bar{\alpha}_t}}(x_t - \sqrt{1-\bar{\alpha}_t}\epsilon) \\ \tilde{\mu} &amp;= \frac{\sqrt{\alpha_t}(1-\bar{\alpha}_{t-1})}{1-\bar{\alpha}_t}x_t + \frac{\sqrt{\bar{\alpha}_{t-1}}\beta_t}{1-\bar{\alpha}_t}\frac{1}{\sqrt{\bar{\alpha}_t}}(x_t - \sqrt{1-\bar{\alpha}_t}\epsilon) \\ &amp;= \frac{1}{\sqrt{\alpha_t}}(x_t-\frac{1-\alpha_t}{\sqrt{1-\bar{\alpha}_t}}\epsilon) \end{aligned}\] <p>Thus, the reverse process can be written as:</p> \[x_{t-1} = \mathcal{N}(x_{t-1}\vert \frac{1}{\sqrt{\alpha_t}}(x_t-\frac{1-\alpha_t}{\sqrt{1-\bar{\alpha}_t}}\epsilon_\theta(x_t, t)), \frac{1-\bar{\alpha}_{t-1}}{1-\bar{\alpha}_t}\beta_t I)\] <p>It can be shown that all we need to do is to learn the noise \(\epsilon_\theta(x_t, t)\), equivalent to learning the noise \(\epsilon_\theta(\sqrt{\bar{\alpha}_t}x_0 + \sqrt{1-\bar{\alpha}_t}\epsilon, t)\)</p> <h2 id="advanced-topics">Advanced Topics</h2> <h3 id="parameterization-of-beta">Parameterization of \(\beta\)</h3> <p>Usually, we can afford a larger update step when the sample gets noisier, so \(\beta_1&lt; \beta_2&lt; \ldots &lt; \beta_T\) and therefore \(\bar{\alpha}_1 &gt; \bar{\alpha}_2 &gt; \ldots &gt; \bar{\alpha}_T\).</p> <h3 id="parameterization-of-variance">Parameterization of Variance</h3> <p>Since learning a variance leads to unstable training, the variance is usually set to a fixed value \(\frac{1-\bar{\alpha}_{t-1}}{1-\bar{\alpha}_t}\beta_t\).</p> <h3 id="denoising-diffusion-implicit-model">Denoising Diffusion Implicit Model</h3> <p>DDIM makes it possible to train the diffusion model up to any arbitrary number of forward steps but only sample from a subset of steps in the generative process.</p> \[q_{\sigma, s&lt;t}(x_s\vert x_t, x_0) = \mathcal{N}(x_s\vert \sqrt{\bar{\alpha}_s}(\frac{x_t-\sqrt{1-\bar{\alpha}_t}\epsilon_\theta^t(x_t)}{\sqrt{\bar{\alpha}_t}})+\sqrt{1-\bar{\alpha}_s-\sigma_t^2}\epsilon_\theta^t(x_t), \sigma_t^2I)\] <h3 id="latent-variable-space">Latent Variable Space</h3> <p>Latent diffusion model runs the process in a latent space \(z_t\) instead of the data space \(x_t\), which is more efficient and can be used to process multi-modal data.</p> <h3 id="model-architecture">Model Architecture</h3> <p>There are two common architectures for diffusion models: U-Net and Transformer.</p> <p>For more details, please refer to <a href="https://lilianweng.github.io/posts/2021-07-11-diffusion-models/">Lilian Weng’s blog</a>.</p>]]></content><author><name></name></author><category term="data-science"/><category term="math"/><summary type="html"><![CDATA[An introduction to the diffusion model.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://truman0102.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://truman0102.github.io/blog/2024/tabs</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="34e673ed-12b0-4379-abfc-88e94fe0f934" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="34e673ed-12b0-4379-abfc-88e94fe0f934" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="6ae05ef1-fd55-44f3-9f19-d2dab1f44303" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="6ae05ef1-fd55-44f3-9f19-d2dab1f44303" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</pre></td></tr></tbody></table></code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="23cb2188-1ac0-46ec-8920-9bacae1190c3" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="23cb2188-1ac0-46ec-8920-9bacae1190c3" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://truman0102.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://truman0102.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://truman0102.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://truman0102.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://truman0102.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://truman0102.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://truman0102.github.io/blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://truman0102.github.io/blog/2024/echarts</id><content type="html" xml:base="https://truman0102.github.io/blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</pre></td></tr></tbody></table></code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry></feed>